{"version":3,"sources":["constants.js","Context.js","Header/Navlink.js","Header/Navbar.js","ModeToggler.js","Header/Header.js","SideBar/SocialMediaLink.js","SideBar/ContactArea.js","SideBar/SideBar.js","Work/WorkBlock.js","Work/Work.js","Utils/SkillsBox.js","Exp/ExperienceBlock.js","Exp/Experience.js","Myself/AbilitiesBox.js","Myself/Myself.js","App.js","serviceWorker.js","index.js"],"names":["socialMediaLinks","skills","workFlixRemote","workWorkForce","workMRMWebsite","workEmergencyZone","experienceShell","experienceRMO","experienceRMO2","experienceMRM","experienceTCFG","abilities","abilitesNameMapping","colorPalette","dark","background","paraText","headerText","base","pressed","shade","light","Context","React","createContext","theme","localStorage","getItem","toggleTheme","Navlink","memo","props","changeMainPageContent","e","preventDefault","navChangeFunction","linkAddress","isClicked","contentType","className","onClick","onKeyDown","keyCode","tabIndex","role","cx","clicked","linkText","Navbar","ModeToggler","useContext","buttonRef","useRef","emojiSpan","toUpperCase","aria-hidden","ref","current","click","Header","SocialMediaLink","socialMediaIconLinkWordsArray","themeToggler","split","website","imageLinkTagCode","componentSocialMediaIconLink","altText","socialMediaLink","link","href","rel","target","width","height","src","process","alt","mainClassName","ContactArea","id","SideBar","forwardRef","incomingRefs","useState","showContactArea","toggleContactArea","useLayoutEffect","checkScreenSize","window","innerWidth","addEventListener","removeEventListener","roleAttribute","aside","displayPictureLink","sideBarRef","sideBarBoxRef","WorkBlock","hasLink","h3Tag","projectHasLink","name","imageLink","mockupImage","imgWidth","imgHeight","mockupImageText","description","Work","map","x","project","mockup","altMockupText","key","SkillsBox","skillsList","type","groupName","iterationList","listTitle","skillsIcon","color","listCode","createSkillsBox","ExperienceBlock","skillsUsed","detailsBlock","duration","skillsBlock","Experience","createExperienceBlock","contentArray","company","timePeriod","companyLink","AbilitiesBox","Myself","download","App","changeColorsTo","forEach","document","documentElement","style","setProperty","toLowerCase","preferredTheme","contentAreaDivRef","createRef","sideBarRefs","sideBarCompressed","contentAreaView","changeContentAreaView","currentTheme","changeTheme","showBottomContactArea","Provider","value","body","classList","contains","remove","newTheme","setItem","newContent","add","setTimeout","scrollBy","scrollTop","view","renderContentView","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.254f646b.chunk.js","sourcesContent":["export const displayPictureLink = '/images/displayPicture-experience-phone.jpg';\nexport const displayPictureLinkPhone = '/images/displayPicture-experience-phone.jpg';\n\nexport const socialMediaIconLink = '/images/icons/socialMediaIcon-instagram.svg';\n\n//export const phoneNumber = '+91-8860129729';\nexport const emailLink = \"shahi.tushar8@gmail.com\";\nexport const mainHeading = `Hey! My Name is Tushar.\nI like to code.`;\n\n\nexport const socialMediaLinks = {\n    'linkedin': 'https://www.linkedin.com/in/tushar-shahi/',\n    'instagram': 'https://www.instagram.com/shahi_tushar/',\n    'github': 'https://github.com/TusharShahi',\n}\n\nexport const myDescription = \"Software Engineer based out of Delhi who enjoys product development. Has experience working at an early stage startup as well as a Fortune 500 company.\"\nexport const myBrag = \"Very comfortable with Javascript. Loves to automate.\"\nexport const myFreeTime = \"In his freetime - reads, lifts.\"\nexport const myHobbies = \"Plays football for the chills and has a fondness for the hills.\"\n\n\n\nexport const codeScribbles = [\n    \"Official Website for Indian Rover Challenge 2019. They use a different one now.\",\n    \"A whatsapp bot that replied with a students attendance from my colleges online attendance portal. Yes, Whatsapp blocked all of the numbers I used.\",\n    \"A python script that emails me my attendance every morning before class at 7 AM, with the subject being either RUN or DO NOT WAKEUP, depending on my attendance for the first class.\",\n]\n\n\nexport const skills = {\n\n    'javascript': {\n        'name': 'Javascript',\n        'imageLink': 'javaScript',\n        'link': 'https://www.javascript.com/',\n        'color': 'yellow'\n    },\n    'node': {\n        'name': 'NodeJs',\n        'imageLink': 'nodejs',\n        'link': 'https://nodejs.org/en/',\n        'color': 'green'\n    },\n    'typescript': {\n        'name': 'TypeScript',\n        'imageLink': 'typeScript',\n        'link': 'https://www.typescriptlang.org/',\n        'color': 'blue'\n    },\n    'react': {\n        'name': 'ReactJS',\n        'imageLink': 'react',\n        'link': 'https://reactjs.org/',\n        'color': 'blue'\n    },\n    'salesforce': {\n        'name': 'Salesforce',\n        'imageLink': 'salesforce',\n        'link': 'https://developer.salesforce.com/',\n        'color': 'blue'\n\n    },\n    'html': {\n        'name': 'HTML',\n        'imageLink': 'html5',\n        'link': 'https://html.com/',\n        'color': 'red'\n\n    },\n    'css': {\n        'name': 'CSS',\n        'imageLink': 'css3',\n        'link': 'https://www.w3.org/Style/CSS/Overview.en.html',\n        'color': 'blue'\n\n    },\n    'mongo':\n    {\n        'name': 'Mongo',\n        'imageLink': 'mongo',\n        'link': 'https://www.mongodb.com/',\n        'color': 'green'\n\n    }, 'es':\n    {\n        'name': 'ElasticSearch',\n        'imageLink': 'elasticSearch',\n        'link': 'https://www.elastic.co/',\n        'color': 'blue'\n\n    },\n    'cpp':\n    {\n        'name': 'C++',\n        'imageLink': 'cplusplus',\n        'link': 'https://www.cplusplus.com/',\n        'color': 'red'\n\n\n    },\n    'python': {\n        'name': 'Python',\n        'imageLink': 'python3',\n        'link': 'https://www.python.org/',\n        'color': 'blue'\n\n    },\n    'git': {\n        'name': 'Git',\n        'imageLink': 'git',\n        'link': 'https://git-scm.com/',\n        'color': 'red'\n\n    },\n    'vsc': {\n        'name': 'VSCode',\n        'imageLink': 'vsCode',\n        'link': 'https://code.visualstudio.com/',\n        'color': 'blue'\n\n    },\n    'linux': {\n        'name': 'Linux',\n        'imageLink': 'linux',\n        'link': 'https://www.linux.org/',\n        'color': 'yellow'\n\n    }\n\n};\n\n\n\nexport const workFlixRemote = {\n    'project': 'flixRemote',\n    'description': \"Chrome extension which lets you control Netflix using phone\",\n    'mockup': \"/images/work/flixremote-mockup.png\",\n    'link': \"https://chrome.google.com/webstore/detail/flixremote-your-netflix-r/jkhffbfbokiincaebolhpcfdkhiipalh?hl=en\",\n    'altMockupText': \"FlixRemote Mockup\",\n    'imgWidth': '672',\n    'imgHeight': '384'\n\n}\n\n\nexport const workWorkForce = {\n    'project': 'WorkForce',\n    'description': \"Desktop application to manage work force at a college campus\",\n    'mockup': \"/images/work/workforce-mockup.png\",\n    'link': \"\",\n    'altMockupText': \"WorkForce Mockup\",\n    'imgWidth': '5005',\n    'imgHeight': '3004'\n}\n\nexport const workMRMWebsite = {\n    'project': 'MRM Website',\n    'description': \"Official Website for Mars Rover Manipal\",\n    'mockup': \"/images/work/mrmwebsite-mockup.png\",\n    'link': \"http://www.marsrovermanipal.com\",\n    'altMockupText': \"MRM Website Mockup\",\n    'imgWidth': '5340',\n    'imgHeight': '2826'\n}\n\nexport const workEmergencyZone = {\n    'project': 'Emergency Zone',\n    'description': \"Online biology based quiz game for college tech fest\",\n    'mockup': \"/images/work/emergencyzone-mockup.png\",\n    'link': \"\",\n    'altMockupText': \"Emergency Zone Mockup\",\n    'imgWidth': '5416',\n    'imgHeight': '2796'\n}\n\n\n\n\nexport const experienceShell = {\n    'companyLink': 'https://play.google.com/store/apps/details?id=com.shell.sitibv.myjiffylube&hl=en&gl=US',\n    'role': 'Software Engineer',\n    'company': 'Shell IT',\n    'description': 'Pivotal in golive and updates of MyJiffyLube app. Responsible for front end development focusing on accessibility.',\n    'timePeriod': 'July 2019 - ',\n    'skillsUsed': [skills['salesforce'],\n    skills['javascript'], skills['css']\n    ]\n}\n\nexport const experienceRMO = {\n    'companyLink': 'https://www.rankme.online/',\n    'role': 'Software Engineering Intern',\n    'company': 'Rank Me Online',\n    'description': 'Built online review analysis tool. Enhanced existing product dashboard with more insightful data analysis features. Created influencer discovery platform from scratch. Mentored interns to successfully onboard them to the project.',\n    'timePeriod': 'December 2018 - June 2019',\n    'skillsUsed': [/*{ 'name' : 'Stanford Core NLP' , 'imageLink' : 'stanfordCoreNLP'},*/\n        skills['es'],\n        skills['mongo'],\n        skills['typescript'],\n        skills['python']]\n}\n\nexport const experienceRMO2 = {\n    'companyLink': 'https://www.rankme.online/',\n    'role': 'Software Engineering Intern',\n    'company': 'Rank Me Online',\n    'description': 'Built the new product dashboard of the B2B Online Reputation Management tool. The dashboard provided efficient searching, filtering and aggregations of social media data.',\n    'timePeriod': 'June 2018 - July 2018',\n    'skillsUsed': [skills['es'],\n    skills['typescript']]\n}\n\nexport const experienceMRM = {\n    'companyLink': 'https://www.facebook.com/MarsRoverManipal/',\n    'company': 'Mars Rover Manipal',\n    'description': 'Handled finance, sponsorship, public relations, social media and other documentation. Ensured smooth working of the team. Mentored juniors to take on same role.',\n    'timePeriod': 'November 2016 - July 2018'\n    //,'timePeriod' : 'College'\n}\n\nexport const experienceTCFG = {\n    'companyLink': 'https://www.facebook.com/TeachCodeforGood/',\n    'company': 'Teach Code for Good',\n    'description': 'Volunteered as an HTML and Python teacher in schools in proximity. Went on to design the curriculum for the same.',\n    'timePeriod': 'November 2016 - December 2018',\n}\n\n\nexport const abilities = {\n    'web': [\n        skills['javascript'],\n        skills['typescript'],\n        skills['node'],\n        skills['react'],\n        skills['html'],\n        skills['css']\n    ],\n    'database': [\n        skills['mongo'],\n        skills['es']\n    ],\n    'core': [\n        skills['cpp']\n    ],\n    'tools': [\n        skills['git'],\n        skills['vsc'],\n        skills['linux']\n    ]\n\n}\n\n\n\nexport const abilitesNameMapping = {\n    'web': 'Web Technologies',\n    'database': 'Databases',\n    'core': 'Core',\n    'tools': 'Tools and Platforms',\n\n};\n\nexport const colorPalette = {\n    dark: {\n        background: '#222629',\n        paraText: '#fff',\n        //  headers: '#86c232',\n        headerText: '#fff',\n\n        base: '#fff',\n        pressed: '#c5c6c8',\n        shade: '#2d3235'\n    },\n    light: {\n        background: '#fffff',\n        paraText: '#15202b',\n        // headers: '#4c632d',\n        headerText: '#212121',\n\n        base: '#212121',\n        pressed: '#22303c',\n        shade: '#f5f5f5'\n    }\n}","import React from 'react'\n\nconst Context = React.createContext(\n    {\n        theme: localStorage.getItem('themeSwitch') != null ? localStorage.getItem('themeSwitch') : 'LIGHT',\n        toggleTheme: () => { },\n    }\n);\n\n\nexport default Context;","import React, { memo } from 'react';\nimport cx from 'classnames';\nimport './Navlink.css';\n\nconst Navlink = memo((props) => {\n\n  const changeMainPageContent = (e) => {\n    ////console.log(\"change main content\");\n    e.preventDefault();\n    return props.navChangeFunction(props.linkAddress)\n  }\n\n  const keyPressChangeMainContent = (e) => {\n    ////console.log(\"key pressed\");\n    if (e.keyCode == '13' || e.keyCode == 32) {\n      changeMainPageContent(e);\n    }\n  }\n\n  const isClicked = props.contentType == props.linkAddress ? true : false;\n  ////console.log(props.linkAddress);\n  ////console.log(props.contentType);\n  return (\n    <div className=\"Navlink\">\n      <div onClick={changeMainPageContent} onKeyDown={keyPressChangeMainContent}\n        tabIndex=\"0\" role=\"button\"\n        className={cx({\n          clicked: isClicked\n        })}\n      >{props.linkText}</div>\n    </div>\n  );\n});\n\nexport default Navlink;","import React, { memo } from 'react';\nimport Navlink from './Navlink';\nimport './Navbar.css';\n\n\nconst Navbar = memo((props) => {\n\n  return (\n    <div className=\"Navbar\">\n      <Navlink linkAddress='experience' linkText='Exp' navChangeFunction={props.navChangeFunction} contentType={props.contentType}></Navlink>\n      <Navlink linkAddress='work' linkText='Work' navChangeFunction={props.navChangeFunction} contentType={props.contentType}></Navlink>\n      <Navlink linkAddress='else' linkText='Else' navChangeFunction={props.navChangeFunction} contentType={props.contentType}></Navlink>\n    </div>\n  );\n\n});\n\nexport default Navbar;","import React, { useRef, useContext, memo } from 'react';\nimport Context from './Context';\n\nconst ModeToggler = memo((props) => {\n\n    const { theme, toggleTheme } = useContext(Context);\n\n    const buttonRef = useRef();\n\n\n    const keyDown = (e) => {\n        if (e.keyCode == '13' || e.keyCode == '32') {\n            //console.log(\"called\");\n            buttonRef.current.click();\n        }\n    }\n\n\n    let emojiSpan = theme.toUpperCase() === 'DARK'\n        ? <span role=\"img\" aria-hidden=\"true\">&#127771;</span>\n        : <span role=\"img\" aria-hidden=\"true\">&#127774;</span>;\n    return (\n        <div className=\"modeChangeButton\" ref={buttonRef} role=\"button\" tabIndex=\"0\" onClick={toggleTheme} onKeyDown={keyDown}>\n            {theme.toUpperCase()} {emojiSpan}\n        </div>\n    );\n});\n\nexport default ModeToggler;\n","import React, { memo } from 'react';\nimport Navbar from './Navbar';\nimport ModeToggler from '../ModeToggler';\nimport './Header.css';\n\n\nconst Header = memo((props) => {\n\n\n  return (\n    <div className=\"Header\">\n      <ModeToggler></ModeToggler>\n      <Navbar navChangeFunction={props.navChangeFunction} contentType={props.contentType}></Navbar>\n    </div >\n  );\n\n\n});\n\nexport default Header;","import React, { useContext, memo } from 'react';\nimport { socialMediaIconLink } from '../constants';\nimport Context from '../Context';\n\nconst SocialMediaLink = memo((props) => {\n\n  const { theme, themeToggler } = useContext(Context);\n\n\n  let socialMediaIconLinkWordsArray = socialMediaIconLink.split('-');\n  socialMediaIconLinkWordsArray[1] = props.website + '.svg';\n  const componentSocialMediaIconLink = socialMediaIconLinkWordsArray[0] + '-' + socialMediaIconLinkWordsArray[1];\n\n\n  const altText = props.website + ' link';\n  const socialMediaLink = props.link;\n  let imageLinkTagCode;\n  //if(socialMediaType == 'instagram'){\n\n  //  imageLinkTagCode = <a href={socialMediaLink}><img src={require(`${componentSocialMediaIconLink}`)} alt={altText}></img></a>\n  imageLinkTagCode = <a href={socialMediaLink} rel=\"noopener noreferrer\" target=\"_blank\"><img width=\"21\" height=\"21\" src={process.env.PUBLIC_URL + componentSocialMediaIconLink} alt={altText}></img></a>\n  let mainClassName = \"SocialMediaLink \" + theme;\n  return (\n    <div className={mainClassName}>\n      <div className='MediaIconBox'>\n        {imageLinkTagCode}\n      </div>\n    </div>\n  );\n\n\n});\n\n\nexport default SocialMediaLink;","import React, { memo } from 'react';\nimport './ContactArea.css';\nimport SocialMediaLink from './SocialMediaLink';\nimport { /*phoneNumber ,*/ emailLink, socialMediaLinks } from '../constants';\n\nconst ContactArea = memo((props) => {\n\n  //const telNumberLink = 'tel:' + phoneNumber;\n  const mailToLink = \"mailto:\" + emailLink;\n\n\n  return (\n\n    <div className='contactArea'>\n\n\n      <div id='socialMediaBox'>\n        <SocialMediaLink website='linkedin' link={socialMediaLinks['linkedin']}></SocialMediaLink>\n        <SocialMediaLink website='instagram' link={socialMediaLinks['instagram']}></SocialMediaLink>\n        <SocialMediaLink website='github' link={socialMediaLinks['github']}></SocialMediaLink>\n\n      </div>\n\n      <div id='emailAndPhoneBox'>\n        <p><a href={mailToLink}>{emailLink}</a></p>\n        {/*<p><a href={telNumberLink}>{phoneNumber}</a></p>*/}\n      </div>\n\n      <div id='copyrightBox'>\n        <p>\t&copy; Tushar Shahi</p>\n      </div>\n    </div>\n  );\n});\n\nexport default ContactArea;","import React, { memo, forwardRef, useLayoutEffect, useState, useEffect } from 'react';\nimport './Sidebar.css';\nimport ContactArea from './ContactArea';\n\n\nconst SideBar = memo(forwardRef((props, incomingRefs) => {\n\n  // console.log(\"side bar function called\");\n\n  const [showContactArea, toggleContactArea] = useState(true);\n\n\n\n  useLayoutEffect(() => {\n    const checkScreenSize = () => {\n      //console.log(window.innerWidth);\n      toggleContactArea(window.innerWidth > 768);\n    }\n    checkScreenSize();\n    window.addEventListener('resize', checkScreenSize);\n\n    return () => {\n      window.removeEventListener('resize', checkScreenSize);\n    }\n  });\n\n\n\n  let roleAttribute = null;\n  if (props.aside) {\n    roleAttribute = { 'role': 'complementary' };\n  }\n  let displayPictureLink = props.displayPictureLink;\n  let mainHeading = `Hey! I am Tushar.\n  I like to code.`;\n\n  return (\n    <div className=\"SideBar\" ref={incomingRefs.sideBarRef} {...roleAttribute}>\n      <div className='SideBarBox' ref={incomingRefs.sideBarBoxRef}>\n\n        <div id='welcomeArea'>\n          <div id='displayPhotoArea'>\n            <img height=\"588\" width=\"604\" src={process.env.PUBLIC_URL + displayPictureLink} alt='Display Picture'></img>\n          </div>\n\n          <div id='textArea'>\n            <h1>{mainHeading}</h1>\n          </div>\n        </div>\n        {showContactArea && <ContactArea></ContactArea>}\n\n\n\n      </div>\n\n    </div>\n  );\n}));\n\nexport default SideBar;","import React, { memo } from 'react';\nimport cx from 'classnames';\n\nconst WorkBlock = memo((props) => {\n\n\n\n\n    //console.log(\"work block rendered\");\n    let hasLink = true;\n    let h3Tag = <h3><a href={props.link}\n        className={cx({\n            projectHasLink: hasLink\n        })} rel=\"noopener noreferrer\" target=\"_blank\">{props.name}</a></h3>\n    if (props.link == '') {\n        hasLink = false;\n        h3Tag = <h3>{props.name}</h3>\n    }\n\n\n    let imageLink = props.mockupImage;\n\n    return (<div className='WorkBlock'>\n\n        {h3Tag}\n        <div className='WorkScreenShotsBox'>\n            <img width={props.imgWidth} height={props.imgHeight} src={process.env.PUBLIC_URL + imageLink} alt={props.mockupImageText}></img>\n        </div>\n        <div className='WorkDescription'>\n            <p>{props.description}</p>\n        </div>\n    </div>);\n});\n\n\nexport default WorkBlock;","import React, { memo } from 'react';\nimport { workWorkForce, workEmergencyZone, workMRMWebsite, workFlixRemote } from '../constants';\nimport WorkBlock from '../Work/WorkBlock';\nimport '../Work/Work.css';\n\nconst Work = memo(() => {\n\n\n    const createWorkBlock = (contentArray) => {\n\n        let workBlock = contentArray.map((x) =>\n            <WorkBlock name={x.project}\n                mockupImage={x.mockup} link={x.link}\n                description={x.description}\n                mockupImageText={x.altMockupText}\n                role={x.role}\n                key={x.project}\n                imgWidth={x.imgWidth}\n                imgHeight={x.imgHeight}\n            >\n            </WorkBlock>\n        );\n        return workBlock;\n\n\n    }\n\n\n    return (<div>\n        <h2>Work</h2>\n        <div>\n            {createWorkBlock([workFlixRemote, workMRMWebsite, workEmergencyZone, workWorkForce])}\n        </div>\n    </div>);\n\n});\n\n\nexport default Work;","import React, { useContext, memo } from 'react';\nimport Context from '../Context';\nimport { abilities, abilitesNameMapping } from '../constants';\nimport './SkillsBox.css';\n\n\nconst SkillsBox = memo((props) => {\n    const { theme, toggleTheme } = useContext(Context);\n\n\n    const createSkillsBox = (skillsList, type, groupName) => {\n\n        let iterationList = skillsList;\n        let listTitle = \"Skills Used : \";\n\n        if (type == 'abilities') {\n            iterationList = abilities[groupName];\n            listTitle = `${abilitesNameMapping[groupName]} :`;\n        }\n\n        if (iterationList != null) {\n\n            let skillsIcon = iterationList.map((x) =>\n                <li key={x.name}><a className={x.color + ' ' + theme} rel=\"noopener noreferrer\" target=\"_blank\" href={x.link}>{x.name}</a></li>);\n\n\n            let listCode = <ul>{skillsIcon}</ul>;\n            let skillsListBox = <div><p>{listTitle}</p>{listCode}</div>\n            return skillsListBox;\n        }\n        else {\n            return null;\n        }\n\n    }\n\n    let mainBox = <div className='SkillsBox'>\n        {createSkillsBox(props.skillsList, props.type, props.groupName)}\n    </div>;\n    return mainBox;\n\n});\n\nexport default SkillsBox;","import React, { memo } from 'react';\nimport SkillsBox from '../Utils/SkillsBox';\n\nconst ExperienceBlock = memo((props) => {\n    let skillsUsed = props.skillsUsed;\n\n    let detailsBlock = <div>\n        <h3><a href={props.link} rel=\"noopener noreferrer\" target=\"_blank\">{props.name}</a></h3>\n        <h4>{props.duration}</h4>\n        <div className='DescriptionBox'>\n            <p>{props.description}</p>\n        </div>\n    </div>;\n    if (props.role != null) {\n        detailsBlock = <div>\n            <h3><a href={props.link} rel=\"noopener noreferrer\" target=\"_blank\">{props.role}</a></h3>\n            <h4>{props.name} / {props.duration}</h4>\n            <div className='DescriptionBox'>\n                <p>{props.description}</p>\n            </div>\n        </div>;\n    }\n\n\n\n\n    let experienceBlock = null;\n    let skillsBlock = null;\n\n\n    if (skillsUsed == null) {\n    }\n    else {\n        skillsBlock = <SkillsBox skillsList={skillsUsed}></SkillsBox>\n    }\n\n\n    experienceBlock = <div className='ExperienceBlock'>\n\n        {detailsBlock}\n        {skillsBlock}\n    </div>\n\n    return (experienceBlock);\n\n\n});\n\n\nexport default ExperienceBlock;","import React, { memo } from 'react';\nimport ExperienceBlock from './ExperienceBlock';\nimport { experienceShell, experienceMRM, experienceRMO, experienceRMO2, experienceTCFG } from '../constants';\nimport './Experience.css'\n\nconst Experience = memo(() => {\n\n\n\n    const createExperienceBlock = (contentArray) => {\n\n        let experienceBlock = contentArray.map(x =>\n            <ExperienceBlock name={x.company}\n                description={x.description}\n                duration={x.timePeriod}\n                skillsUsed={x.skillsUsed}\n                link={x.companyLink}\n                role={x.role}\n                key={x.timePeriod}\n            ></ExperienceBlock>\n\n        );\n\n        return experienceBlock;\n    }\n\n\n\n    return (<div>\n        <h2>Experience</h2>\n        <div id='corporate'>\n            {createExperienceBlock([experienceShell, experienceRMO, experienceRMO2])}\n        </div>\n        <div id='school'>\n            <h2>College</h2>\n            <div>\n\n            </div>\n            <div>\n                {createExperienceBlock([experienceMRM, experienceTCFG])}\n            </div>\n        </div>\n    </div>);\n\n\n});\n\nexport default Experience;","import React from 'react';\nimport SkillsBox from '../Utils/SkillsBox';\n\n\nconst AbilitiesBox = () => {\n\n\n\n    return (<div className='AbilitiesBox'>\n        <h2>Abilities</h2>\n        <SkillsBox groupName='web' type=\"abilities\"></SkillsBox>\n        <SkillsBox groupName='database' type=\"abilities\"></SkillsBox>\n        <SkillsBox groupName='tools' type=\"abilities\"></SkillsBox>\n        <SkillsBox groupName='core' type=\"abilities\"></SkillsBox>\n    </div>);\n\n}\n\n\nexport default AbilitiesBox;","import React, { memo } from 'react';\nimport AbilitiesBox from './AbilitiesBox';\nimport './Myself.css';\nimport { myDescription, myFreeTime, myBrag, myHobbies } from '../constants';\n\n\n\nconst Myself = memo(() => {\n\n\n    return (<div className='Myself'>\n        <h2>Myself</h2>\n        <div id='description'>\n            <p>{myDescription}</p>\n        </div>\n        <div id='javascriptBrag'>\n            <p>{myBrag}</p>\n        </div>\n        <div id='hobbies'>\n            <p>{myHobbies}</p>\n        </div>\n        <div id='freeTime'>\n            <p>{myFreeTime}</p>\n        </div>\n\n        <p id='resumeLink'><a rel=\"noopener noreferrer\" target=\"_blank\" href={process.env.PUBLIC_URL + '/Resume.pdf'} download>Download Resume \t&#11015;</a></p>\n\n        <AbilitiesBox></AbilitiesBox>\n\n    </div>);\n\n});\n\n\nexport default Myself;","import React, { memo, createRef, useState } from 'react';\n\n\nimport { displayPictureLinkPhone, colorPalette } from './constants';\nimport Context from './Context';\n\n\nimport './App.css';\nimport Header from './Header/Header';\nimport SideBar from './SideBar/SideBar';\nimport Work from './Work/Work';\nimport ContactArea from './SideBar/ContactArea';\nimport Experience from './Exp/Experience';\nimport Myself from './Myself/Myself';\n\nconst App = memo(() => {\n\n\n\n\n  const changeColorsTo = (theme) => {\n    // console.log(\"change colors to\");\n    const properties = ['background', 'paraText', 'headerText', 'base', 'pressed', 'shade'];\n    properties.forEach((x) => {\n      document.documentElement.style.setProperty(`--${x}`, colorPalette[theme.toLowerCase()][x]);\n\n    });\n\n  }\n\n  let preferredTheme = 'DARK';\n\n  if (localStorage.getItem('themeSwitch') !== null && localStorage.getItem('themeSwitch') === 'LIGHT') {\n    preferredTheme = 'LIGHT';\n  }\n\n  const contentAreaDivRef = createRef();\n  const sideBarRef = createRef();\n  const sideBarBoxRef = createRef();\n  const sideBarRefs = { sideBarRef, sideBarBoxRef };\n\n  changeColorsTo(preferredTheme);\n\n\n  const toggleThemeFunction = () => {\n\n\n    if (document.body.classList.contains('preLoad')) {\n      document.body.classList.remove('preLoad');\n    }\n    const newTheme = currentTheme === 'DARK' ? 'LIGHT' : 'DARK';\n    changeTheme(newTheme);\n    localStorage.setItem('themeSwitch', newTheme);\n    changeColorsTo(newTheme);\n  }\n\n\n  const [sideBarCompressed, changeSideBarCompressed] = useState(false);\n\n  const [contentAreaView, changeContentAreaView] = useState('main');\n\n  const [currentTheme, changeTheme] = useState(preferredTheme);\n\n  const [showBottomContactArea, changeBottomContactAreaVisibility] = useState(window.innerWidth < 768);\n\n\n\n\n\n\n\n\n\n  const changeContent = (newContent) => {\n    //console.log(newContent);\n    if (!sideBarCompressed) {\n      if (window.innerWidth > 768) {\n        contentAreaDivRef.current.classList.add('showMainContent');\n        sideBarRef.current.classList.add('sideBarCompressed');\n        sideBarBoxRef.current.classList.add('sideBarBoxFullWidth');\n\n      }\n      else {\n        setTimeout(() => { window.scrollBy(0, (500 - document.body.scrollTop)); }, 200);\n        contentAreaDivRef.current.classList.add('displayMainContent');\n\n      }\n\n    }\n    changeContentAreaView(newContent);\n  }\n\n  const renderContentView = (view) => {\n    switch (view) {\n      case 'experience': return <Experience></Experience>;\n      case 'work': return <Work></Work>;\n      case 'else': return <Myself></Myself>;\n      default: return null;\n    }\n  }\n\n  //console.log(\"App rendered\");\n  return (\n    <Context.Provider value={{ theme: currentTheme, toggleTheme: toggleThemeFunction }}>\n      <div className=\"App\" >\n\n        <Header navChangeFunction={changeContent} contentType={contentAreaView}></Header>\n        <SideBar ref={sideBarRefs} displayPictureLink={displayPictureLinkPhone} aside={contentAreaView !== 'main'}></SideBar>\n        <div className=\"ContentArea\" ref={contentAreaDivRef}>\n          {renderContentView(contentAreaView)}\n        </div>\n        {showBottomContactArea && <ContactArea></ContactArea>}\n\n      </div >\n    </Context.Provider>\n  );\n\n\n});\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              //console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './Base.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}